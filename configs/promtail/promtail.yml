server:
  http_listen_port: 9080
  http_listen_address: "0.0.0.0"
  grpc_listen_port: 9081
  log_level: "debug"

positions:
  filename: /tmp/positions.yaml

clients:
  - url: "http://loki:3100/loki/api/v1/push"

scrape_configs:
  - job_name: "docker"
    docker_sd_configs:
      - host: "unix:///var/run/docker.sock"
        refresh_interval: "5s"
    relabel_configs:
      - source_labels: [ "__meta_docker_container_id" ]
        target_label: "container_id"
      - source_labels: [ "__meta_docker_container_name" ]
        target_label: "container_name"
      - source_labels: [ "__meta_docker_image_name" ]
        target_label: "image_name"
      - source_labels: [ "__meta_docker_container_command" ]
        target_label: "command"
      - source_labels: [ "__meta_docker_container_created" ]
        target_label: "created"
      - source_labels: [ "__meta_docker_container_state" ]
        target_label: "state"
      - source_labels: [ "__meta_docker_container_ports" ]
        target_label: "ports"
      - source_labels: [ "__meta_docker_container_labels" ]
        target_label: "labels"
      - source_labels: [ "__meta_docker_container_network_mode" ]
        target_label: "network_mode"
      - source_labels: [ "__meta_docker_container_networks" ]
        target_label: "networks"
      - source_labels: [ '__meta_docker_container_label_service' ]
        target_label: 'service'

    pipeline_stages:
      - match:
          selector: '{service=~"backend"}'
          pipeline_name: "service"
          stages:
            - json:
                expressions:
                  time: time
                  service: service
                  level: level
                  msg: msg
            - labels:
                service:
                level:
                msg:
            - output:
                level: level
                msg: msg
                time: time
                service: service
#          stages:
#            - json:
#                expressions:
#                  time: time
#                  service: service
#                  level: level
#                  msg: msg
#                  source: source
#            - labels:
#                service:
#                level:
#                msg:
#            - timestamp:
#                source: time
#                format: "RFC3339Nano"
#            - output:
#                level: level
#                msg: msg
#                time: time
#                service: service
#                source: source

      - match: # grafana
          selector: '{job="grafana"}'
          pipeline_name: "grafana"
          stages:
            - regex:
                expression: '^t=(?P<time>\S+) lvl=(?P<level>\S+).*$'
            - timestamp:
                source: time
                format: "2006-01-02T15:04:05-0700"

      - match: # loki
          selector: '{job="loki"}'
          pipeline_name: "loki"
          stages:
            - regex:
                expression: '^.* ts=(?P<time>\S+).*$'
            - timestamp:
                source: time
                format: "RFC3339Nano"

      - match: # prometheus
          selector: '{task="prometheus"}'
          pipeline_name: "prometheus"
          stages:
            - regex:
                expression: '^level=(?P<level>\S+) ts=(?P<time>\S+).*$'
            - timestamp:
                source: time
                format: "RFC3339Nano"